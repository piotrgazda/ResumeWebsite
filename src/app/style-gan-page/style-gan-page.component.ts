import { Component, OnInit } from "@angular/core";

@Component({
  selector: "app-style-gan-page",
  templateUrl: "./style-gan-page.component.html",
  styleUrls: ["./style-gan-page.component.css"],
})
export class StyleGanPageComponent implements OnInit {
  projectDescription =
    "Project implements generative adversarial neural network model described in  " +
    '<a href="https://arxiv.org/abs/1812.04948" target="_blank" rel="noopener noreferrer">paper</a> ' +
    "It's main purpose was allowing user partial manual control of features of output images. It's achieved by first allowing network to " +
    "process random input vector by fully connected mapper network and then using mapped vectors at the side of each progressive block, with combination of style transfer operation, achieved by Adaptive Instance Normaliation. " +
    "This separation of inputs in each block makes it possible to manipulate features generated on different levels of generating output image. " +
    "It gives possibility of generating so called style mixed images shown as the first image view on the right side. Another implemented feature was truncation trick which is " +
    "cutting a style vector closer towards trained average style vector. It leads to better quality generated images at cost of diversity. The main advantage of using this method is " +
    "ability to not generated outliers, which are images with features, that weren't properly represented in training dataset, for example unusual face pose or with covered head. " +
    "Interpolation between a random style vector and the average style vector is presented on second image view. It also shows ability to generate symmetrical image in the space of style vectors. " +
    "In project there were also implemented quality measurements like Frechett Inception Distance or Inception Score, used to evalutate the models. Additionally experiments proved " +
    "that using truncation trick with coefficient of between 0.7 and 0.8 might improve images generated by network. "+
    "Technologies used in implementation of this project include: " +
    "<ul> <li>Python</li><li>Tensorflow</li><li>Keras</li><li>Django with REST framework</li><li>Google colab as compute platform used for training</li> </ul>";

  gitLink =
    '<a href="https://github.com/piotrgazda/StyleGanKeras" target="_blank" rel="noopener noreferrer"> https://github.com/piotrgazda/StyleGanKeras</a>';
  constructor() {}
  imagesStyleMix = [
    "assets/stylegan/stylemix/stylemix11.png",
    "assets/stylegan/stylemix/stylemix12.png",
    "assets/stylegan/stylemix/stylemix13.png",
    "assets/stylegan/stylemix/stylemix14.png",
  ];
  imagesTruncation = [
    "assets/stylegan/truncation/truncation11.png",
    "assets/stylegan/truncation/truncation12.png",
    "assets/stylegan/truncation/truncation13.png",
    "assets/stylegan/truncation/truncation14.png",
  ];
  captionStyleMix = "Style mixing presentation grid";
  captionTruncation =
    "Interpolation between two random style vectors through average style vector";
  ngOnInit() {}
}
